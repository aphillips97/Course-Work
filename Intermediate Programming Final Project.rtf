{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset0 Helvetica-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Regular;
\f3\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red103\green29\blue2;\red0\green0\blue0;\red0\green0\blue0;
\red110\green5\blue2;}
{\*\expandedcolortbl;;\cssrgb\c48452\c16305\c0;\csgray\c0\c0;\csgray\c0;
\cssrgb\c51239\c6511\c0;}
\margl1440\margr1440\vieww18760\viewh10520\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf2 \cb3 //THIS IS THE CODE FOR THE MAIN CLASS
\f1\b0 \cf4 \
\
\pard\pardeftab720\partightenfactor0

\f2 using System;\uc0\u8232 \u8232 namespace ATMProject\u8232 \{\u8232     class ATMProgram\u8232     \{\u8232         static void Main(string[] args)\u8232         \{\u8232 \u8232             int correctNum = 0;\u8232             string accessAccount = "";\u8232             string haveAccount = "";\u8232             double [] values = new double[4];\u8232 \u8232             GUI gui = new GUI();\u8232 \u8232             //Here is the security section, it will gather user information and store it, then it prompts you to input the information that you just stored.\u8232             //It will continue to loop until the value "correctNum" is returned as 1, which happens when the user information is entered correctly.\u8232             while (correctNum == 0)\u8232             \{\u8232 \u8232                 Console.WriteLine("Welcome to ATM Mobile.");\u8232                 Console.WriteLine("Would you like to access your account? (Y or N)");\u8232                 accessAccount = Console.ReadLine();\u8232                 if (accessAccount == "Y")\u8232                 \{\u8232 \u8232                     Console.WriteLine("Do you already have an account? (Y or N)");\u8232                     haveAccount = Console.ReadLine();\u8232 \u8232                     if (haveAccount == "Y")\u8232                     \{\u8232                         correctNum = gui.Passcode();\u8232 \u8232                     \}\u8232                     if (haveAccount == "N")\u8232                     \{\u8232                         gui.SetUserInfo();\u8232 \u8232                         correctNum = gui.Passcode();\u8232 \u8232                     \}\u8232                 \}\u8232             \}\u8232 \u8232 \u8232             //Here, if correctNum is set as 1 by entering user information correctly, it allows the user to access their account.\u8232             if (correctNum == 1)\u8232             \{\u8232                 double begBal = 0;\u8232                 begBal = GUI.UserInput1();\u8232                 values[0] = begBal;\u8232 \u8232                 double withdraw = 0;\u8232                 withdraw = GUI.UserInput2();\u8232                 values[1] = withdraw;  \u8232 \u8232                 double deposit = 0;\u8232                 deposit = GUI.UserInput3();\u8232                 values[2] = deposit;\u8232 \u8232                 double finalBalance = 0;\u8232                 finalBalance = GUI.BalanceCalc(begBal, withdraw, deposit);\u8232                 values[3] = finalBalance;\u8232 \u8232                 Console.WriteLine("Your remaining balance is " + values[3]);\u8232                 Console.WriteLine("Thank you for using ATM Mobile! Please come again!");\u8232             \}\u8232 \u8232 \u8232             Console.ReadKey();\u8232         \}\u8232 \u8232     \}\u8232 \}\
\
\
\
\

\f3\b \cf5 //THIS IS THE CODE FOR THE GUI/SECOND CLASS
\f2\b0 \cf4 \
\
\cf0 \cb1 using System;\uc0\u8232 namespace ATMProject\u8232 \{\u8232     public class GUI\u8232     \{\u8232 \u8232         public string clientName;\u8232         public string userName;\u8232         public string pinNumber;\u8232 \u8232         public GUI()\u8232         \{\u8232 \u8232         \}\u8232 \u8232        //This method lets the user set their acccount information and stores them in the public values above.\u8232 \u8232         public void SetUserInfo()\u8232         \{\u8232             Console.WriteLine("Please set your Account Information.");\u8232             Console.WriteLine("Set your Name.");\u8232             clientName = Console.ReadLine();\u8232 \u8232             Console.WriteLine("Set your username.");\u8232             userName = Console.ReadLine();\u8232 \u8232             Console.WriteLine("Set your pin number.");\u8232             pinNumber = Console.ReadLine();\u8232 \u8232             Console.WriteLine("Thank you, your information has been recorded.");\u8232             Console.WriteLine("");\u8232 \u8232         \}\u8232 \u8232         //This method checks the account information that the user just set, and if it is correct, it sets correct to 1 which then allows them to use their account.\u8232 \u8232         public int Passcode()\u8232         \{\u8232             int correct = 0;\u8232             String pinInput;\u8232             String userInput;\u8232 \u8232             Console.WriteLine("To access your account, please enter your account information.");\u8232             Console.WriteLine("");\u8232             Console.WriteLine("Enter your username.");\u8232 \u8232             userInput = Console.ReadLine();\u8232             if (userName == userInput)\u8232             \{\u8232                 Console.WriteLine("Enter your pin number.");\u8232                 pinInput = Console.ReadLine();\u8232                 if (pinInput == pinNumber)\u8232                 \{\u8232                     correct = 1;\u8232                 \}\u8232             \}\u8232 \u8232             return correct;\u8232         \}\u8232 \u8232         //This method lets the user set their beginning account balance.\u8232 \u8232         public static double UserInput1()\u8232         \{\u8232             string userInput;\u8232 \u8232             Console.WriteLine("Please enter your account beginning balance: ");\u8232 \u8232             userInput = Console.ReadLine();\u8232 \u8232             double userInputBegBal = double.Parse(userInput);\u8232 \u8232             return userInputBegBal;\u8232 \u8232         \}\u8232 \u8232         //This method lets the user withdraw an amount of money from their balance.\u8232 \u8232         public static double UserInput2()\u8232         \{\u8232             string userInput2;\u8232 \u8232             Console.WriteLine("Enter the amount you would like to withdraw: ");\u8232 \u8232             userInput2 = Console.ReadLine();\u8232 \u8232             double userInputWdraw = double.Parse(userInput2);\u8232 \u8232             return userInputWdraw;\u8232 \u8232         \}\u8232 \u8232         //This method lets the user deposit an amount of money to their balance.\u8232 \u8232         public static double UserInput3()\u8232         \{\u8232             string userInput;\u8232 \u8232             Console.WriteLine("Enter the amount you would like to deposit: ");\u8232 \u8232             userInput = Console.ReadLine();\u8232 \u8232             double userInputDpos = double.Parse(userInput);\u8232 \u8232             return userInputDpos;\u8232 \u8232         \}\u8232 \u8232         //This method calculates the final balance of the account after the user has made their desired changes.\u8232 \u8232         public static double BalanceCalc(double begBal, double withdraw, double deposit)\u8232         \{\u8232             return begBal - withdraw + deposit;\u8232 \u8232         \}\u8232 \u8232 \u8232     \}\u8232 \}\u8232 \u8232 \cf4 \cb3 \uc0\u8232 \u8232 }